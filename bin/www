#!/usr/bin/env node

/**
  * www
  * Server network declarations for app.
  * @author Rhys Evans
  * @version 0.1
*/

const app = require('../app');
const http = require('http');
const https = require('https');
const fs = require('fs');

// Get SSL key and cert from file
// If not present, generate at scripts/generate-cert.sh
const sslKey = fs.readFileSync('bin/ssl/server.key');
const sslCert = fs.readFileSync('bin/ssl/server.cert');

/**
  * Get port from environment and store in Express.
*/
let httpPort = normalizePort(process.env.PORT_HTTP || '3000');
let httpsPort = normalizePort(process.env.PORT_HTTPS || '3443');

/**
  * Create HTTP Server.
*/
let httpServer = http.createServer(app);

/**
 * Create HTTPS Server
 */
let httpsServer = https.createServer({
  key: sslKey,
  cert: sslCert,
  requestCert: false,
  rejectUnauthorized: false
}, app);

/**
  * HTTP Listen on provided port, on all network interfaces
*/
httpServer.listen(httpPort);
httpServer.on('listening', onListening);

/**
 * HTTPS Listen on provided port, on all network interfaces
 */
httpsServer.listen(httpsPort);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
  let port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
  let addr = httpServer.address();
  let bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
